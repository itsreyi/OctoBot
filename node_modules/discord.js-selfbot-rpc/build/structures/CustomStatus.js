const { RichPresenceType, StatusType } = require('../util/Constants.js');
const Util = require('../util/Util.js');

const error = (...args) => new Error(...args);
const rangeError = (...args) => new RangeError(...args);
const typeError = (...args) => new TypeError(...args);

class CustomStatus {
	constructor() {
		this.data = {};
	}
	setEmoji(string) {
		if(!validateString(string)) throw typeError('EMOJI', 'Type is not valid string!');
		this.data.emoji = Util.parseEmoji(string);
		return this;
	}
	setState(string) {
		if(!validateString(string)) throw typeError('STATE', 'Type is not valid string!');
		this.data.state = string;
		return this;
	}
	setStatus(string) {
		if(!StatusType.includes(string)) throw rangeError('SET_STATUS must be one of (online, idle, dnd or invisible)');
		this.data.status = string;
		return this;
	}
	toJSON() {
		const json = {
			type: RichPresenceType.CUSTOM_STATUS,
			name: 'Custom Status',
		};
		if(this.data.emoji) json.emoji = this.data.emoji;
		if(this.data.state) json.state = this.data.state;
		return json;
	}
	toData() {
		const data = {};
		data.activities = [this.toJSON()];
		if(this.data.status) data.status = this.data.status;
		return data;
	}
};

module.exports = CustomStatus;

function validateString(value) {
	if(typeof value !== 'string') return false;
	else return true;
};
